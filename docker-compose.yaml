version: '3'

services:

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - pong-data
  # Frontend written in React
  frontend:
    container_name: pong-frontend
    image: pong-front:latest
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ${PWD}/frontend/src:/app/src:ro
      - ${PWD}/frontend/public:/app/public:ro
    restart: always

  # Backend written in NestJS
  backend:
    container_name: pong-backend
    image: pong-back:latest
    build: ./backend
    env_file:
      - .env
    ports:
      - "3001:3000"
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
    volumes:
      - ${PWD}/backend:/app
      - /app/node_modules
    networks:
      - pong-data
    restart: always

  # Database using PostgreSQL
  database:
    container_name: ${DB_HOST}
    image: postgres:latest
    env_file:
      - .env
    expose:
      - ${DB_PORT}
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
    networks:
      - pong-data
    restart: always

networks:

  pong-data:
    driver: bridge
    name: pong-data